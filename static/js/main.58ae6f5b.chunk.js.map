{"version":3,"sources":["components/UI/ErrorModal.module.css","components/UI/Card.module.css","components/UI/Button.module.css","components/Users/AddUser.module.css","components/Users/UsersList.module.css","components/UI/Card.js","components/UI/Button.js","components/Helpers/Wrapper.js","components/UI/ErrorModal.js","components/Users/AddUser.js","components/Users/UsersList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","Button","button","type","onClick","Wrapper","Backdrop","backdrop","onConfirm","ModalOverlay","modal","header","title","content","message","actions","ErrorModal","Fragment","ReactDOM","createPortal","document","getElementById","AddUser","nameInputRef","useRef","ageInputRef","useState","error","setError","input","onSubmit","event","preventDefault","enteredName","current","value","enteredUserAge","trim","length","onAddUser","htmlFor","id","ref","UsersList","users","map","user","name","age","App","usersList","setUsersList","username","prevUsersList","Math","random","toString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.58ae6f5b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"ErrorModal_backdrop__3JozY\",\"modal\":\"ErrorModal_modal__1xdo9\",\"header\":\"ErrorModal_header__1Yr1y\",\"content\":\"ErrorModal_content__1gfzi\",\"actions\":\"ErrorModal_actions__3wYgl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2x64P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2_2fT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"AddUser_input__39hYA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"UsersList_users__3hMnm\"};","import React from \"react\";\r\nimport classes from \"./Card.module.css\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className={`${classes.card} ${props.className}`}>{props.children}</div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./Button.module.css\";\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button\r\n      className={classes.button}\r\n      type={props.type || \"button\"}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","const Wrapper = (props) => {\r\n  return props.children;\r\n};\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Card from \"./Card\";\r\nimport Button from \"./Button\";\r\nimport classes from \"./ErrorModal.module.css\";\r\n\r\nconst Backdrop = (props) => {\r\n  return <div className={classes.backdrop} onClick={props.onConfirm} />;\r\n};\r\n\r\nconst ModalOverlay = (props) => {\r\n  return (\r\n    <Card className={classes.modal}>\r\n      <header className={classes.header}>\r\n        <h2>{props.title}</h2>\r\n      </header>\r\n      <div className={classes.content}>\r\n        <p>{props.message}</p>\r\n      </div>\r\n      <footer className={classes.actions}>\r\n        <Button onClick={props.onConfirm}>Okay</Button>\r\n      </footer>\r\n    </Card>\r\n  );\r\n};\r\nconst ErrorModal = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      {ReactDOM.createPortal(\r\n        <Backdrop onConfirm={props.onConfirm} />,\r\n        document.getElementById(\"backdrop-root\")\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlay\r\n          title={props.title}\r\n          message={props.message}\r\n          onConfirm={props.onConfirm}\r\n        />,\r\n        document.getElementById(\"overlay-root\")\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React, { useState, useRef } from \"react\";\r\n\r\nimport Card from \"../UI/Card\";\r\nimport Button from \"../UI/Button\";\r\nimport Wrapper from \"../Helpers/Wrapper\";\r\nimport classes from \"./AddUser.module.css\";\r\nimport ErrorModal from \"../UI/ErrorModal\";\r\nconst AddUser = (props) => {\r\n  const nameInputRef = useRef();\r\n  const ageInputRef = useRef();\r\n\r\n  // const [enteredUsername, setEnteredUsername] = useState(\"\");\r\n  // const [enteredAge, setEnteredAge] = useState(\"\");\r\n  const [error, setError] = useState();\r\n\r\n  const addUserHandler = (event) => {\r\n    event.preventDefault();\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredUserAge = ageInputRef.current.value;\r\n\r\n    if (enteredName.trim().length === 0 || enteredUserAge.trim().length === 0) {\r\n      setError({\r\n        title: \"Invalid input\",\r\n        message: \"Please enter a valid name and age (non-empty values).\",\r\n      });\r\n      return;\r\n    }\r\n    if (+enteredUserAge < 1) {\r\n      setError({\r\n        title: \"Invalid age\",\r\n        message: \"Please enter a valid age (higher than 0).\",\r\n      });\r\n      return;\r\n    }\r\n    props.onAddUser(enteredName, enteredUserAge);\r\n    nameInputRef.current.value = \"\";\r\n    ageInputRef.current.value = \"\";\r\n  };\r\n\r\n  const errorHandler = () => {\r\n    setError(null);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      {error && (\r\n        <ErrorModal\r\n          title={error.title}\r\n          message={error.message}\r\n          onConfirm={errorHandler}\r\n        />\r\n      )}\r\n      <Card className={classes.input}>\r\n        <form onSubmit={addUserHandler}>\r\n          <label htmlFor=\"username\">Username</label>\r\n          <input id=\"username\" type=\"text\" ref={nameInputRef} />\r\n          <label htmlFor=\"age\">Age (Years)</label>\r\n          <input id=\"age\" type=\"number\" ref={ageInputRef} />\r\n          <Button type=\"submit\">Add User</Button>\r\n        </form>\r\n      </Card>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n","import React from \"react\";\r\n\r\nimport Card from \"../UI/Card\";\r\nimport classes from \"./UsersList.module.css\";\r\n\r\nconst UsersList = (props) => {\r\n  return (\r\n    <Card className={classes.users}>\r\n      <ul>\r\n        {props.users.map((user) => (\r\n          <li key={user.id}>\r\n            {user.name} ({user.age} years old)\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","import React, { useState, Fragment } from \"react\";\n\nimport AddUser from \"./components/Users/AddUser\";\nimport UsersList from \"./components/Users/UsersList\";\n\nfunction App() {\n  const [usersList, setUsersList] = useState([]);\n  const addUserHandler = (username, age) => {\n    setUsersList((prevUsersList) => {\n      return [\n        ...prevUsersList,\n        { name: username, age: age, id: Math.random().toString() },\n      ];\n    });\n  };\n\n  return (\n    <Fragment>\n      <AddUser onAddUser={addUserHandler} />\n      <UsersList users={usersList} />\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}